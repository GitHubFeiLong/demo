<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans    
                            http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                            http://www.springframework.org/schema/context    
                            http://www.springframework.org/schema/context/spring-context-3.1.xsd    
                            http://www.springframework.org/schema/mvc    
                            http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
	<!-- 自动扫描 -->
	<context:component-scan base-package="com.ssm.mf" />
	<!-- 引入配置文件 -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:jdbc.properties" />
	</bean>
	
 	<!-- MySQL -->
	<bean id="mysqlDataSource" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="driverClassName" value="${jdbc.mysql.driver}"></property>
	    <property name="url" value="${jdbc.mysql.url}"></property>	                             
		<property name="username" value="${jdbc.mysql.username}"></property>
		<property name="password" value="${jdbc.mysql.password}"></property> 
		<property name="initialSize" value="${initialSize}"></property>
	    <property name="maxActive" value="${maxActive}"></property>	                             
		<property name="minIdle" value="${minIdle}"></property>
		<property name="maxWait" value="${maxWait}"></property> 
	</bean>
 
 	<!-- SQLServer -->
 	<bean id="sqlserverDataSource" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="driverClassName" value="${jdbc.sqlserver.driver}"></property>
	    <property name="url" value="${jdbc.sqlserver.url}"></property>	                             
		<property name="username" value="${jdbc.sqlserver.username}"></property>
		<property name="password" value="${jdbc.sqlserver.password}"></property> 
		<property name="initialSize" value="${initialSize}"></property>
	    <property name="maxActive" value="${maxActive}"></property>	                             
		<property name="minIdle" value="${minIdle}"></property>
		<property name="maxWait" value="${maxWait}"></property> 
	</bean>
 	
 	<!-- 动态数据源 -->
  	<bean id="dynamicDataSource" class="com.ssm.mf.utils.DynamicDataSource">
 		<property name="targetDataSources">
 			<map key-type="java.lang.String">
 				<entry key="mysqlDataSource" value-ref="mysqlDataSource"></entry>
 				<entry key="sqlserverDataSource" value-ref="sqlserverDataSource"></entry>
 			</map>
 		</property>
 		<property name="defaultTargetDataSource" ref="mysqlDataSource"></property>
 	</bean>
 	
	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dynamicDataSource" />
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath:com/ssm/mf/mapper/*.xml"></property>
		<property name="typeAliasesPackage" value="com.mf.beans" />
		<property name="configLocation" value="classpath:mybatis-config.xml"></property> 
	</bean>
 
	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.ssm.mf.*.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>
 
	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<!-- <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dynamic_dataSource" />
	</bean> -->
 
</beans> 
